<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Í¥ÄÎ¶¨ - OMEN Í≤åÏù¥Ìä∏Ïõ®Ïù¥</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f7fafc;
            line-height: 1.6;
        }
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .header h1 { font-size: 24px; }
        .header a {
            color: white;
            text-decoration: none;
            padding: 8px 16px;
            background: rgba(255,255,255,0.2);
            border-radius: 5px;
            margin-left: 10px;
        }
        .container {
            max-width: 1400px;
            margin: 20px auto;
            padding: 0 20px;
        }
        .breadcrumb {
            background: white;
            padding: 15px 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .breadcrumb a {
            color: #667eea;
            text-decoration: none;
        }
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        .stat-card {
            background: white;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            text-align: center;
        }
        .stat-number {
            font-size: 32px;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 8px;
        }
        .stat-label {
            color: #666;
            font-size: 14px;
        }
        .section {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            margin-bottom: 30px;
            overflow: hidden;
        }
        .section-header {
            background: #f8f9fa;
            padding: 20px;
            border-bottom: 1px solid #e9ecef;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .section-title {
            font-size: 20px;
            font-weight: bold;
            color: #333;
        }
        .section-content {
            padding: 20px;
        }
        .server-selector {
            margin-bottom: 20px;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 4px;
            display: flex;
            align-items: center;
            gap: 10px;
            flex-wrap: wrap;
        }
        .server-selector label {
            font-weight: bold;
            margin: 0;
        }
        .server-selector select {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            min-width: 200px;
            font-size: 14px;
        }
        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            text-decoration: none;
            display: inline-block;
            transition: all 0.2s;
        }
        .btn-primary {
            background: #667eea;
            color: white;
        }
        .btn-primary:hover {
            background: #5a6fd8;
        }
        .btn-sm {
            padding: 6px 12px;
            font-size: 13px;
        }
        .table-list {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 15px;
        }
        .table-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 8px;
            border: 1px solid #e9ecef;
        }
        .table-name {
            font-weight: bold;
            color: #333;
            font-family: monospace;
        }
        .table-records {
            color: #666;
            font-size: 14px;
        }
        .loading, .error, .no-data {
            text-align: center;
            padding: 40px 20px;
            color: #666;
            font-style: italic;
            background: #f8f9fa;
            border-radius: 8px;
        }
        .error {
            color: #dc3545;
            background: #f8d7da;
            border: 1px solid #f5c6cb;
        }
        .server-data {
            background: #fff;
        }
        .server-info, .server-logs, .server-notifications {
            margin-bottom: 25px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }
        .server-info:last-child,
        .server-logs:last-child,
        .server-notifications:last-child {
            border-bottom: none;
        }
        .server-data h4 {
            color: #667eea;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 2px solid #f0f0f0;
        }
        .server-data h5 {
            color: #007bff;
            margin-bottom: 12px;
            font-size: 16px;
        }
        .server-data p {
            margin-bottom: 8px;
            line-height: 1.5;
        }
        .server-logs ul, .server-notifications ul {
            list-style: none;
            padding: 0;
            background: #f8f9fa;
            border-radius: 6px;
            padding: 15px;
        }
        .server-logs li, .server-notifications li {
            padding: 8px 0;
            border-bottom: 1px solid #e9ecef;
            font-family: monospace;
            font-size: 13px;
            line-height: 1.4;
        }
        .server-logs li:last-child,
        .server-notifications li:last-child {
            border-bottom: none;
        }
        .query-section {
            margin-top: 20px;
        }
        .query-input {
            width: 100%;
            height: 120px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-family: monospace;
            font-size: 14px;
            resize: vertical;
        }
        .query-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 10px;
            flex-wrap: wrap;
            gap: 10px;
        }
        .btn-execute {
            background: #28a745;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
        }
        .btn-execute:hover {
            background: #218838;
        }
        .query-results {
            margin-top: 20px;
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 6px;
            padding: 15px;
            max-height: 400px;
            overflow: auto;
        }
        @media (max-width: 768px) {
            .container {
                padding: 0 10px;
            }
            .stats-grid {
                grid-template-columns: 1fr;
            }
            .table-list {
                grid-template-columns: 1fr;
            }
            .server-selector {
                flex-direction: column;
                align-items: flex-start;
            }
            .server-selector select {
                min-width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>üóÉÔ∏è Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Í¥ÄÎ¶¨</h1>
        <div>
            <a href="/admin">Í¥ÄÎ¶¨Ïûê Ìôà</a>
            <a href="/">Î©îÏù∏ Ìôà</a>
        </div>
    </div>

    <div class="container">
        <div class="breadcrumb">
            <a href="/admin">Í¥ÄÎ¶¨Ïûê</a> > <span>Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Í¥ÄÎ¶¨</span>
        </div>

        <!-- Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÌÜµÍ≥Ñ -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number" id="table-count">Î°úÎî©Ï§ë...</div>
                <div class="stat-label">ÌÖåÏù¥Î∏î Ïàò</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="total-records">Î°úÎî©Ï§ë...</div>
                <div class="stat-label">Ï¥ù Î†àÏΩîÎìú Ïàò</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="db-availability">Ïó∞Í≤∞Îê®</div>
                <div class="stat-label">DB Í∞ÄÏö©ÏÑ±</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="avg-response">Ï∏°Ï†ïÏ§ë...</div>
                <div class="stat-label">ÌèâÍ∑† ÏùëÎãµÏãúÍ∞Ñ</div>
            </div>
        </div>

        <!-- ÌÖåÏù¥Î∏î Î™©Î°ù / ÏÑúÎ≤ÑÎ≥Ñ Îç∞Ïù¥ÌÑ∞ -->
        <div class="section">
            <div class="section-header">
                <h2 class="section-title">üìã ÌÖåÏù¥Î∏î Î™©Î°ù</h2>
            </div>
            <div class="section-content">
                <div class="server-selector">
                    <label for="server-select">ÏÑúÎ≤ÑÎ≥Ñ Îç∞Ïù¥ÌÑ∞ Î≥¥Í∏∞:</label>
                    <select id="server-select" onchange="loadServerData()">
                        <option value="">Ï†ÑÏ≤¥ Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§</option>
                    </select>
                    <button onclick="refreshTables()" class="btn btn-primary btn-sm">ÏÉàÎ°úÍ≥†Ïπ®</button>
                </div>

                <div class="table-list" id="table-list">
                    <div class="loading">ÌÖåÏù¥Î∏î Î™©Î°ùÏùÑ Î∂àÎü¨Ïò§Îäî Ï§ë...</div>
                </div>

                <div class="server-data" id="server-data" style="display: none;">
                    <h4>ÏÑúÎ≤ÑÎ≥Ñ ÏÉÅÏÑ∏ Ï†ïÎ≥¥</h4>
                    <div class="server-details" id="server-details"></div>
                </div>
            </div>
        </div>

        <!-- SQL ÏøºÎ¶¨ Ïã§Ìñâ -->
        <div class="section">
            <div class="section-header">
                <h2 class="section-title">üîç SQL ÏøºÎ¶¨ Ïã§Ìñâ</h2>
            </div>
            <div class="section-content">
                <div class="query-section">
                    <textarea id="sql-query" class="query-input" placeholder="SELECT * FROM servers LIMIT 10;"></textarea>
                    <div class="query-controls">
                        <div>
                            <span style="color: #666; font-size: 14px;">‚ö†Ô∏è Ï£ºÏùò: Îç∞Ïù¥ÌÑ∞ Î≥ÄÍ≤Ω ÏøºÎ¶¨Îäî Ïã†Ï§ëÌûà Ïã§ÌñâÌïòÏÑ∏Ïöî</span>
                        </div>
                        <button class="btn-execute" onclick="executeQuery()">ÏøºÎ¶¨ Ïã§Ìñâ</button>
                    </div>
                    <div class="query-results" id="query-results" style="display: none;">
                        <!-- ÏøºÎ¶¨ Í≤∞Í≥ºÍ∞Ä Ïó¨Í∏∞Ïóê ÌëúÏãúÎê©ÎãàÎã§ -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú Ï¥àÍ∏∞Ìôî
        document.addEventListener('DOMContentLoaded', function() {
            loadTables();
            loadServers();
        });

        // ÌÖåÏù¥Î∏î Î™©Î°ù Î°úÎìú
        async function loadTables() {
            try {
                const startTime = Date.now();
                const response = await fetch('/api/database/tables');
                const responseTime = Date.now() - startTime;
                const data = await response.json();

                if (data.success) {
                    updateStats(data.tables, data.stats, responseTime);
                    displayTables(data.tables);
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('ÌÖåÏù¥Î∏î Î°úÎìú Ïã§Ìå®:', error);
                document.getElementById('table-list').innerHTML = '<div class="error">ÌÖåÏù¥Î∏î Î™©Î°ùÏùÑ Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§: ' + error.message + '</div>';
                document.getElementById('table-count').textContent = 'Ïò§Î•ò';
                document.getElementById('total-records').textContent = 'Ïò§Î•ò';
            }
        }

        // ÏÑúÎ≤Ñ Î™©Î°ù Î°úÎìú
        async function loadServers() {
            try {
                const response = await fetch('/api/servers');
                const data = await response.json();

                if (data.success) {
                    const select = document.getElementById('server-select');
                    data.servers.forEach(server => {
                        const option = document.createElement('option');
                        option.value = server.server_id;
                        option.textContent = server.name + ' (' + server.server_id + ')';
                        select.appendChild(option);
                    });
                }
            } catch (error) {
                console.error('ÏÑúÎ≤Ñ Î™©Î°ù Î°úÎìú Ïã§Ìå®:', error);
            }
        }

        // ÌÜµÍ≥Ñ ÏóÖÎç∞Ïù¥Ìä∏
        function updateStats(tables, stats, responseTime) {
            const totalRecords = stats ? stats.total_records : tables.reduce((sum, table) => sum + (table.row_count || 0), 0);
            const tableCount = stats ? stats.total_tables : tables.length;

            document.getElementById('table-count').textContent = tableCount;
            document.getElementById('total-records').textContent = totalRecords.toLocaleString();
            if (responseTime) {
                document.getElementById('avg-response').textContent = responseTime + 'ms';
            }
        }

        // ÌÖåÏù¥Î∏î Î™©Î°ù ÌëúÏãú
        function displayTables(tables) {
            const tableList = document.getElementById('table-list');

            if (tables.length === 0) {
                tableList.innerHTML = '<div class="no-data">ÌÖåÏù¥Î∏îÏù¥ ÏóÜÏäµÎãàÎã§.</div>';
                return;
            }

            const html = tables.map(table => {
                const errorText = table.error ? ' <span style="color: #dc3545;">(' + table.error + ')</span>' : '';
                return '<div class="table-item">' +
                    '<div>' +
                        '<div class="table-name">' + table.name + '</div>' +
                        '<div class="table-records">' + (table.row_count || 0).toLocaleString() + ' records' + errorText + '</div>' +
                    '</div>' +
                    '<button class="btn btn-primary btn-sm" onclick="viewTable(\'' + table.name + '\')">Ï°∞Ìöå</button>' +
                '</div>';
            }).join('');

            tableList.innerHTML = html;
        }

        // ÏÑúÎ≤ÑÎ≥Ñ Îç∞Ïù¥ÌÑ∞ Î°úÎìú
        async function loadServerData() {
            const serverId = document.getElementById('server-select').value;
            const serverDataDiv = document.getElementById('server-data');
            const tableListDiv = document.getElementById('table-list');

            if (!serverId) {
                // Ï†ÑÏ≤¥ Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Î≥¥Í∏∞
                serverDataDiv.style.display = 'none';
                tableListDiv.style.display = 'block';
                loadTables();
                return;
            }

            try {
                const response = await fetch('/api/database/server/' + serverId);
                const data = await response.json();

                if (data.success) {
                    displayServerData(data);
                    tableListDiv.style.display = 'none';
                    serverDataDiv.style.display = 'block';
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('ÏÑúÎ≤Ñ Îç∞Ïù¥ÌÑ∞ Î°úÎìú Ïã§Ìå®:', error);
                alert('ÏÑúÎ≤Ñ Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§: ' + error.message);
            }
        }

        // ÏÑúÎ≤Ñ Îç∞Ïù¥ÌÑ∞ ÌëúÏãú
        function displayServerData(data) {
            const detailsDiv = document.getElementById('server-details');

            const html = '<div class="server-info">' +
                '<h5>üìä ÏÑúÎ≤Ñ Ï†ïÎ≥¥</h5>' +
                '<p><strong>Ïù¥Î¶Ñ:</strong> ' + data.server.name + '</p>' +
                '<p><strong>ID:</strong> ' + data.server.id + '</p>' +
                '<p><strong>Ìè¨Ìä∏:</strong> ' + data.server.port + '</p>' +
                '<p><strong>ÎèÑÎ©îÏù∏:</strong> ' + (data.server.domain || 'ÏÑ§Ï†ïÎêòÏßÄ ÏïäÏùå') + '</p>' +
                '<p><strong>ÏÉÅÌÉú:</strong> <span style="color: ' + (data.server.status === 'running' ? '#28a745' : '#dc3545') + '">' + data.server.status + '</span></p>' +
                '<p><strong>Ìó¨Ïä§ÏÉÅÌÉú:</strong> <span style="color: ' + (data.server.health_status === 'healthy' ? '#28a745' : '#ffc107') + '">' + data.server.health_status + '</span></p>' +
                '<p><strong>ÎßàÏßÄÎßâ Ï≤¥ÌÅ¨:</strong> ' + (data.server.last_health_check ? new Date(data.server.last_health_check).toLocaleString() : 'ÏóÜÏùå') + '</p>' +
                '</div>' +

                '<div class="server-logs">' +
                '<h5>üìÑ ÏµúÍ∑º Î°úÍ∑∏ (' + data.summary.log_count + 'Í∞ú)</h5>' +
                (data.data.recent_logs.length > 0 ?
                    '<ul>' + data.data.recent_logs.map(log =>
                        '<li><strong>' + new Date(log.created_at).toLocaleString() + '</strong> [' + log.level + '] ' + log.message + '</li>'
                    ).join('') + '</ul>' :
                    '<p style="color: #666; font-style: italic;">Î°úÍ∑∏Í∞Ä ÏóÜÏäµÎãàÎã§.</p>') +
                '</div>' +

                '<div class="server-notifications">' +
                '<h5>üîî ÏïåÎ¶º ÏÑ§Ï†ï (' + data.summary.notification_count + 'Í∞ú)</h5>' +
                (data.data.notifications.length > 0 ?
                    '<ul>' + data.data.notifications.map(notif =>
                        '<li><strong>' + notif.trigger_condition + '</strong> ‚Üí ' + notif.notification_type +
                        ' <span style="color: ' + (notif.is_enabled ? '#28a745' : '#dc3545') + '">(' + (notif.is_enabled ? 'ÌôúÏÑ±' : 'ÎπÑÌôúÏÑ±') + ')</span></li>'
                    ).join('') + '</ul>' :
                    '<p style="color: #666; font-style: italic;">ÏïåÎ¶º ÏÑ§Ï†ïÏù¥ ÏóÜÏäµÎãàÎã§.</p>') +
                '</div>';

            detailsDiv.innerHTML = html;
        }

        // ÏÉàÎ°úÍ≥†Ïπ®
        function refreshTables() {
            const serverId = document.getElementById('server-select').value;
            if (serverId) {
                loadServerData();
            } else {
                loadTables();
            }
        }

        // ÌÖåÏù¥Î∏î Ï°∞Ìöå
        function viewTable(tableName) {
            const query = 'SELECT * FROM "' + tableName + '" LIMIT 20;';
            document.getElementById('sql-query').value = query;
            executeQuery();
        }

        // SQL ÏøºÎ¶¨ Ïã§Ìñâ
        function executeQuery() {
            const query = document.getElementById('sql-query').value;
            if (!query.trim()) {
                alert('ÏøºÎ¶¨Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
                return;
            }

            // ÏúÑÌóòÌïú ÏøºÎ¶¨ ÌôïÏù∏
            const dangerousKeywords = ['DROP', 'DELETE', 'TRUNCATE', 'UPDATE'];
            const isUnsafe = dangerousKeywords.some(keyword =>
                query.toUpperCase().includes(keyword)
            );

            if (isUnsafe) {
                if (!confirm('‚ö†Ô∏è ÏúÑÌóòÌïú ÏøºÎ¶¨ÏûÖÎãàÎã§. Ï†ïÎßê Ïã§ÌñâÌïòÏãúÍ≤†ÏäµÎãàÍπå?\n\n' + query)) {
                    return;
                }
            }

            // ÏøºÎ¶¨ Ïã§Ìñâ (Í∞úÎ∞ú Ï§ë)
            const resultsDiv = document.getElementById('query-results');
            resultsDiv.style.display = 'block';
            resultsDiv.innerHTML = '<div style="color: #666;">üîÑ ÏøºÎ¶¨Î•º Ïã§ÌñâÌïòÎäî Ï§ë...</div>';

            setTimeout(() => {
                resultsDiv.innerHTML = '<div style="color: #ffc107;">‚ö†Ô∏è SQL ÏøºÎ¶¨ Ïã§Ìñâ Í∏∞Îä•ÏùÄ Í∞úÎ∞ú Ï§ëÏûÖÎãàÎã§.</div>' +
                    '<div style="margin-top: 10px; font-family: monospace; background: #f0f0f0; padding: 10px; border-radius: 4px;">' +
                    '<strong>Ïã§ÌñâÎêú ÏøºÎ¶¨:</strong><br>' + query + '</div>';
            }, 1000);
        }
    </script>
</body>
</html>